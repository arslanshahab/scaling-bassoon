import React, { useEffect, useState } from 'react'
import Head from 'next/head'
import { useRouter } from 'next/router'
import useTranslation from 'next-translate/useTranslation'
import { Row, Col } from 'antd'
import Layout from '../../../components/layout'
import styles from '../../../styles/BlogDetail.module.scss'
import { http } from '../../../utils/http'
import { mapSingleBlogPropertiesToCamelCase } from '../../../utils/mappings'
import { Blog } from '../../../models/Blog'
import RelatedBlogs from '../../../components/related-blogs'
import { global } from '../../../constants/global'
import BlogCarousel from '../../../components/blog-carousel'

export default function EducationDetail() {
  const { t, lang } = useTranslation('common')
  const [blog, setBlog] = useState<Blog>()
  const router = useRouter()
  const { id } = router.query

  useEffect(() => {
    http
      .get(`/api/v1/blogs/single-article/${id}?with[0]=images`, {
        headers: {
          'Content-Language': lang,
        },
      })
      .then((res: any) => {
        const { data } = res.data
        if (data) {
          const blog = {
            // mapping blog properties to retain camelCase convention
            ...mapSingleBlogPropertiesToCamelCase(data),
          }
          // append featured image to images to make it part of the carousel
          blog.images = [
            {
              id: 0,
              imagePath: blog.featuredImage,
              model: '',
              modelId: 0,
            },
          ]
          setBlog(blog)
        }
      })
      .catch((err: any) => {
        console.error('API response error', err)
      })
  }, [lang, id])

  const renderBlogDescription = () => {
    return (
      <div className={styles['blog-description']}>
        <span className={styles.date}>{blog?.date}</span>
        <h1 className={styles['page-title']}>{blog?.title}</h1>
        <div
          className={styles.description}
          dangerouslySetInnerHTML={{
            __html: blog?.body!,
          }}
        />
      </div>
    )
  }

  return (
    <div className={styles['blog-detail-wrapper']}>
      <Head>
        <title>{`Winmed - ${t('events.titleCase')}`}</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Layout>
        <div className={styles.container}>
          <Row gutter={{ sm: 32, md: 48, lg: 48 }}>
            <Col
              span={24}
              xs={{ span: 24 }}
              md={{ span: 12 }}
              lg={{ span: 12 }}>
              {renderBlogDescription()}
            </Col>
            <Col
              span={24}
              xs={{ span: 24 }}
              md={{ span: 12 }}
              lg={{ span: 12 }}>
              {blog?.images?.length! > 0 && (
                <BlogCarousel
                  images={
                    blog?.images?.map(x => {
                      return {
                        original: `${process.env.NEXT_PUBLIC_API_URL}${x.imagePath}`,
                        thumbnail: `${process.env.NEXT_PUBLIC_API_URL}${x.imagePath}`,
                      }
                    }) || []
                  }
                />
              )}
            </Col>
          </Row>
        </div>
        {blog?.relatedArticles?.items?.length! > 0 && (
          <Row gutter={{ sm: 32, md: 32, lg: 32 }}>
            <Col
              span={24}
              xs={{ span: 24 }}
              md={{ span: 24 }}
              lg={{ span: 24 }}>
              <div className={styles['related-blogs-wrapper']}>
                <RelatedBlogs
                  recommendedBlogs={
                    blog?.relatedArticles?.items?.slice(
                      0,
                      blog?.relatedArticles?.items?.length > 6
                        ? 6
                        : blog?.relatedArticles?.items?.length
                    ) || []
                  }
                  type={global.blogPage.events}
                />
              </div>
            </Col>
          </Row>
        )}
      </Layout>
    </div>
  )
}
