import React, { useEffect, useState } from 'react'
import Head from 'next/head'
import useTranslation from 'next-translate/useTranslation'
import Image from 'next/image'
import Layout from '../../components/layout'
import styles from '../../styles/AboutUs.module.scss'
import ImageSection from '../../components/image-section'
import { AboutAttribute, aboutUsAttributes } from '../../constants/aboutUs'
import OurPartners from '../../components/our-partners'
import { http } from '../../utils/http'
import { AboutPage } from '../../models/AboutPage'
import { mapAboutUsPropertiesToCamelCase } from '../../utils/mappings'

export default function AboutUs() {
  const { t, lang } = useTranslation('common')
  const [aboutUs, setAboutUs] = useState<AboutPage>()

  const aboutUsIdentifier = 'PAGE_ABOUT_US'

  useEffect(() => {
    http
      .get(
        `/api/v1/pagebuilder/get-by-identifier?identifier=${aboutUsIdentifier}`,
        {
          headers: {
            'Content-Language': lang,
          },
        }
      )
      .then(res => {
        const { data } = res.data
        const {
          content: { ABOUT_US01, ABOUT_US02 },
        } = data
        if (data) {
          const aboutUs: AboutPage = {
            id: data.id,
            name: data.name,
            identifier: data.identifier,
            content: {
              ABOUTUS01: mapAboutUsPropertiesToCamelCase(ABOUT_US01),
              ABOUTUS02: mapAboutUsPropertiesToCamelCase(ABOUT_US02),
            },
          }
          setAboutUs(aboutUs)
        }
      })
      .catch(err => {
        console.error('API response error', err)
      })
  }, [lang])

  const renderAttributeItem = (attribute: AboutAttribute, index: number) => {
    return (
      <div key={index} className={styles['attribute-item']}>
        <div className={styles.icon}>
          <Image
            src={attribute.icon}
            alt={t(`${attribute.name}`)}
            width={20}
            height={28}
          />
        </div>
        <div className={styles.name}>
          <h5>{t(`${attribute.name}`)}</h5>
          <span>{t(`${attribute.description}`)}</span>
        </div>
      </div>
    )
  }

  const renderAboutAttributes = () => {
    return (
      <div className={styles['attributes-wrapper']}>
        {aboutUsAttributes.map((attrib: AboutAttribute, index: number) =>
          renderAttributeItem(attrib, index)
        )}
      </div>
    )
  }

  const renderYoutubeLink = () => {
    return (
      <div className={styles['link-card']}>
        <div className={styles.icon}>
          <Image
            src={'/icons/youtube-red.svg'}
            alt='youtube link'
            width={54}
            height={36}
          />
        </div>
        <span>{t(`followOnYoutube`)}</span>
      </div>
    )
  }

  const renderInnerContent = (index: number) => {
    switch (index) {
      case 0:
        return renderAboutAttributes()
      case 1:
        return renderYoutubeLink()
      default:
        break
    }
  }

  return (
    <div className={styles['about-wrapper']}>
      <Head>
        <title>{`Winmed - ${t('aboutUs.titleCase')}`}</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Layout>
        <div className={styles.container}>
          {aboutUs?.content! &&
            Object.entries(aboutUs?.content!).map(([key, about], index) => {
              return (
                <div
                  key={index}
                  data-attrib={key}
                  className={
                    styles[
                      `${index === 0 ? 'attributes-section' : 'video-section'}`
                    ]
                  }>
                  <ImageSection
                    heading={index === 0 ? t(`aboutUs.titleCase`) : ''}
                    content={about.text.value}
                    buttonText=''
                    hideButton
                    image={about.image.value[0]}
                    reverse
                    orderReverse={index % 2 === 0}>
                    {renderInnerContent(index)}
                  </ImageSection>
                </div>
              )
            })}
        </div>
        <div className={styles['partners-section']}>
          <OurPartners />
        </div>
      </Layout>
    </div>
  )
}
